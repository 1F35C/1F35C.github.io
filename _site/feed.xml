<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-12-11T14:22:37-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Setting up Github Pages for a project using React</title><link href="http://localhost:4000/jekyll/update/2021/12/11/github-pages.html" rel="alternate" type="text/html" title="Setting up Github Pages for a project using React" /><published>2021-12-11T12:23:00-05:00</published><updated>2021-12-11T12:23:00-05:00</updated><id>http://localhost:4000/jekyll/update/2021/12/11/github-pages</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2021/12/11/github-pages.html">&lt;h2 id=&quot;why&quot;&gt;Why?&lt;/h2&gt;
&lt;p&gt;[GitHub Pages] is an easy way to get a static website on the web.&lt;/p&gt;

&lt;p&gt;[create-react-app] is an easy way to create a single-page React app.&lt;/p&gt;

&lt;p&gt;Why not combine them to create the easiest React app of our lives?&lt;/p&gt;

&lt;h2 id=&quot;step-1-react-app-git-repository&quot;&gt;Step 1: React App Git Repository&lt;/h2&gt;
&lt;p&gt;First we can scaffold a React app using this one liner.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npx create-react-app &lt;span class=&quot;nt&quot;&gt;--template&lt;/span&gt; typescript&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Template argument is optional. Call me old-fashioned, but I prefer my language statically typed, so I’ll be using the Typescript template.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt; will automatically create a repository for us as well. (+1 for automation!)&lt;/p&gt;

&lt;p&gt;All we have to do now is push what we have to GitHub server:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git remote add origin &amp;lt;repository.git URL&amp;gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
git push &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; origin main&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;step-2-github-configuration&quot;&gt;Step 2: GitHub Configuration&lt;/h2&gt;
&lt;p&gt;Now we can change GitHub repository settings to use GitHub pages.
I wanted the static files to be in a specific directory, so I will be putting my static files for GitHub Pages in /docs.&lt;/p&gt;

&lt;p&gt;In Settings &amp;gt; Pages under Source:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Branch: main&lt;/li&gt;
  &lt;li&gt;Folder: /docs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Not the directory name I would have chosen, but GitHub doesn’t give you too many options.&lt;/p&gt;

&lt;h2 id=&quot;step-3-tweak-packagejson&quot;&gt;Step 3: Tweak package.json&lt;/h2&gt;
&lt;p&gt;You can do a production build of your React app by running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run build&lt;/code&gt;.
You’ll notice that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-script&lt;/code&gt; will put the files in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build&lt;/code&gt; directory, not in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docs&lt;/code&gt;, which is not what we promised GitHub.&lt;/p&gt;

&lt;p&gt;This can be changed by editing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;.
Find where the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build&lt;/code&gt; script is defined, and add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BUILD_PATH=docs&lt;/code&gt; environment variable at the beginning of the command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;...
&lt;span class=&quot;s2&quot;&gt;&quot;scripts&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  ...
  &lt;span class=&quot;s2&quot;&gt;&quot;build&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;BUILD_PATH=docs react-scripts build&quot;&lt;/span&gt;,
  ...
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Another thing you will notice is that all the links to generated files are broken in index.html.&lt;/p&gt;

&lt;p&gt;This is because &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt; expects the base URL to be the root domain URL.
However, the way GitHub Pages works for repositories, your base URL will actually be in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;repository name&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example, index.html will look for the stylesheet at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/static/css/main.a617e044.chunk.css&lt;/code&gt; when it is actually at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&amp;lt;repository name&amp;gt;/static/css/main.a617e044.chunk.css&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Thankfully the base URL can be changed easily with the PUBLIC_URL environment variable.
We will modify the same line we modified earlier (replace &amp;lt;repository name&amp;gt; with your actual repository name):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;...
&lt;span class=&quot;s2&quot;&gt;&quot;scripts&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  ...
  &lt;span class=&quot;s2&quot;&gt;&quot;build&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;BUILD_PATH=docs PUBLIC_URL=&amp;lt;repository name&amp;gt; react-scripts build&quot;&lt;/span&gt;,
  ...
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finally, do another build, then push it to your main branch.
You should be able to see the default &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt; page by going to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;github username&amp;gt;.github.io/&amp;lt;repository name&amp;gt;&lt;/code&gt; after a few minutes.&lt;/p&gt;

&lt;p&gt;I’ll leave the hard part of implementing the website as an exercise to the reader. :)&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Why? [GitHub Pages] is an easy way to get a static website on the web.</summary></entry></feed>